Database query, result, and value components
---------------------------------------------
The Sparc toolkit interacts with many different types of data stores.  To help
ease integration of data from different sources, there are a series of 
high-level interfaces and components that can be used.

As always, we first need to configure the ZCA registry before we can use the
components

>>> from sparc.db import Configure
>>> Configure()

A Query
--------
A query is a simple interface used to store a string that can be used to 
query a database.

>>> from zope.component import createObject
>>> query = createObject(u"sparc.db.query", u"a simple query string")

>>> from sparc.db import IQuery
>>> IQuery.providedBy(query)
True

Query strings need to be unicode
>>> from zope.schema import ValidationError
>>> try:
...     createObject(u"sparc.db.query", "an invalid non-unicode string")
...     assert False
... except ValidationError:
...     pass

A Result Value
---------------
A result value is the value associated with a single query result.  For
tabular databases, this would be the value of a single cell (that does not
contain a multi-value attribute).

we'll just test our factory and the provided interface
>>> from sparc.db import IResultValue
>>> my_value = createObject(u'sparc.db.result_value', u'this is a value')
>>> my_value
'this is a value'
>>> unicode(my_value)
u'this is a value'
>>> IResultValue.providedBy(my_value)
True

A Result Multi-value
---------------------
Some query results might contains a multi-value.

>>> from sparc.db import IResultMultiValue
>>> my_multi_value = createObject(u'sparc.db.result_multi_value',
... 				[u'value 1', u'value 2'])
>>> list(my_multi_value)
['value 1', 'value 2']
>>> IResultMultiValue.providedBy(my_multi_value)
True